default_platform(:ios)

platform :ios do
  def get_app_store_connect_api_key
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT_BASE64"],
      is_key_content_base64: true,
    )
  end

  before_all do
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "1800"
  end

  after_all do
    reset_build_number
  end

  desc "Gym Development"
  lane :gym_development do
    match_fetch_development
    gym(
      export_options: {
        method: "development",
        provisioningProfiles: {
          "com.kantacky.TaskFlusher": "match Development com.kantacky.TaskFlusher"
        }
      },
    )
  end

  desc "Gym AdHoc"
  lane :gym_adhoc do
    match_fetch_adhoc
    gym(
      export_options: {
        method: "ad-hoc",
        provisioningProfiles: {
          "com.kantacky.TaskFlusher": "match AdHoc com.kantacky.TaskFlusher"
        }
      },
    )
  end

  desc "Gym AppStore"
  lane :gym_appstore do
    match_fetch_appstore
    gym(
      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "com.kantacky.TaskFlusher": "match AppStore com.kantacky.TaskFlusher"
        }
      },
    )
  end

  desc "Reset Build Number"
  lane :reset_build_number do
    increment_build_number(build_number: "1")
  end

  desc "Bump Build Number"
  lane :bump_build_number do
    increment_build_number
  end

  desc "Bump Patch Version"
  lane :bump_patch_version do
    increment_version_number(bump_type: "patch")
  end

  desc "Bump Minor Version"
  lane :bump_minor_version do
    increment_version_number(bump_type: "minor")
  end

  desc "Bump Major Version"
  lane :bump_major_version do
    increment_version_number(bump_type: "major")
  end

  desc "Match Development"
  lane :match_development do
    match(
      type: "development",
      api_key: get_app_store_connect_api_key,
    )
  end

  desc "Match Ad Hoc"
  lane :match_adhoc do
    match(
      type: "adhoc",
      api_key: get_app_store_connect_api_key,
    )
  end

  desc "Match App Store"
  lane :match_appstore do
    match(
      type: "appstore",
      api_key: get_app_store_connect_api_key,
    )
  end

  desc "Fetch Development"
  lane :match_fetch_development do
    match(
      type: "development",
      readonly: true,
    )
  end

  desc "Fetch Ad Hoc"
  lane :match_fetch_adhoc do
    match(
      type: "adhoc",
      readonly: true,
    )
  end

  desc "Fetch App Store"
  lane :match_fetch_appstore do
    match(
      type: "appstore",
      readonly: true,
    )
  end

  desc "Delete Development"
  lane :match_delete_development do
    match_nuke(
      type: "development",
      api_key: get_app_store_connect_api_key,
    )
  end

  desc "Delete Ad Hoc"
  lane :match_delete_adhoc do
    match_nuke(
      type: "adhoc",
      api_key: get_app_store_connect_api_key,
    )
  end

  desc "Delete App Store"
  lane :match_delete_appstore do
    match_nuke(
      type: "appstore",
      api_key: get_app_store_connect_api_key,
    )
  end
end
